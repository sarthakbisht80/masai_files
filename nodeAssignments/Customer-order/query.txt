-- 1. Find the total amount spent by each customer
db.orders.aggregate([
  {
    $group: {
      _id: "$customerId",
      totalSpent: { $sum: "$amount" }
    }
  }
])

-- 2. Retrieve order details along with corresponding customer information
db.orders.aggregate([
  {
    $lookup: {
      from: "customers",
      localField: "customerId",
      foreignField: "_id",
      as: "customerDetails"
    }
  },
  {
    $unwind: "$customerDetails"
  }
])

-- 3. Find orders where the amount is greater than Rs. 500
db.orders.aggregate([
  {
    $match: {
      amount: { $gt: 500 }
    }
  }
])

-- 4. Calculate the average order amount per customer
db.orders.aggregate([
  {
    $group: {
      _id: "$customerId",
      avgAmount: { $avg: "$amount" }
    }
  }
])

-- 5. Retrieve all orders with customer details, ensuring each order has an associated customer record
db.orders.aggregate([
  {
    $lookup: {
      from: "customers",
      localField: "customerId",
      foreignField: "_id",
      as: "customer"
    }
  },
  {
    $unwind: "$customer"
  }
])
